---
import PageLayout from '@layouts/PageLayout.astro';
import FilterBar from '@components/FilterBar.svelte';
import ComponentListing from '@components/component/ComponentListing.svelte';
import PipelinesListing from '@components/pipeline/PipelinesListing.svelte';
import ConfigListing from '@components/ConfigListing.svelte';

export interface Props {
    title: string;
    description: string;
    filter: { name: string; count?: number }[];
    displayStyle: { name: string; icon: string }[];
    sortBy: string[];
    pipelines?: {
        name: string;
        description: string;
        stargazers_count: number;
        topics: string[];
        releases: {
            published_at: string;
            tag_name: string;
        }[];
        archived: boolean;
    }[];
    components?: {
        name: string;
        path: string;
        type: string;
        meta: {
            name: string;
            description: string;
            keywords: string[];
            components?: string[];
            input: {}[];
            output: {}[];
        };
        pipelines?: {
            name: string;
            version: string;
        }[];
    }[];
    configs?: {
        name: string;
        content: string;
        config: {};
    }[];
    mainpage_container?: boolean;
    viewTransitions?: boolean;
}

const {
    title,
    description,
    filter = [],
    displayStyle,
    sortBy,
    pipelines,
    components,
    configs,
    mainpage_container = false,
    viewTransitions = false,
} = Astro.props;
---

<PageLayout
    title={title}
    subtitle={description}
    mainpage_container={mainpage_container}
    viewTransitions={viewTransitions}
>
    <div class="container-fluid main-content pt-md-2 p-1">
        <slot />
        <FilterBar displayStyle={displayStyle} filter={filter} sortBy={sortBy} client:load />
        {!components && !configs && <PipelinesListing filters={filter} pipelines={pipelines} client:load />}
        {components && <ComponentListing components={components} client:load />}
        {configs && <ConfigListing configs={configs} client:load />}
    </div>
</PageLayout>

<style lang="scss">
    :global(p),
    :global(li) {
        text-wrap: pretty;
    }
</style>
