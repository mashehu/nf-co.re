---
import FilterBar from '../../components/FilterBar.svelte';
import ModulesListing from '../../components/ModulesListing.svelte';
import octokit from '../../components/oktokit';
import ListingLayout from '../../layouts/ListingLayout.astro';
import PageLayout from '../../layouts/PageLayout.astro';
import { parse } from 'yaml';
import { get } from 'svelte/store';

// get meta.yml from nf-core/modules using octokit and git trees
const tree = await octokit.request('GET /repos/{owner}/{repo}/git/trees/{tree_sha}', {
    owner: 'nf-core',
    repo: 'modules',
    tree_sha: 'master',
    recursive: "true",
}).then((response) => {
    return response.data.tree;
});

    // console.log(tree);

const modules = tree.filter((file) => {
    return (file.path.includes('meta.yml') && !file.path.includes("subworkflows/"));
}).map((file) => {
           return {name: file.path.replace("modules/nf-core/","")
                                .replace("/meta.yml","")
                                .replace("/","_"),
                 path: file.path}
                });
const meta = await modules.map((module) => {
    return octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {
        owner: 'nf-core',
        repo: 'modules',
        path: module.path,
    }).then((response) => {
        const content = parse(Buffer.from(response.data.content, 'base64').toString());
        return content;
    });
});

// console.log("meta : \n",await meta[12]);

const title = 'nf-core/modules';

---

<PageLayout title={title} subtitle={'Browse the '+ meta.length+' modules that are currently available as part of nf-core.'}>
    <FilterBar
    displayStyle={[
        { name: 'grid', icon: 'fa-regular fa-grid-2' },
        { name: 'table', icon: 'fa-regular fa-bars' },
    ]}
    sortBy={['Last release', 'Alphabetical']} client:visible/>
    <ModulesListing input={meta} client:visible/>
</PageLayout>

<style></style>
