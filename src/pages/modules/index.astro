---

import ListingLayout from '../../layouts/ListingLayout.astro';
import { parseDocument } from 'yaml';
// import yaml from 'js-yaml';
import octokit from '../../components/oktokit';
// fetch modules from nf-core/modules github repo from the "modules" directory
// const modules = await fetch('https://api.github.com/repos/nf-core/modules/contents/modules/nf-core?per_page=100').then(
//     (res) => res.json()
// );
const modules = await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {
    owner: 'nf-core',
    repo: 'modules',
    path: 'modules/nf-core',
    per_page: 100,
})
// fetch meta.yml from modules and write them into an array
const meta = await Promise.all(
    modules.map(async (module) => {
        let meta = await fetch(
            `https://raw.githubusercontent.com/nf-core/modules/master/modules/nf-core/${module.name}/meta.yml`
        ).then((res) => res.text());
        // let meta = await octokit.request('GET /repos/{owner}/{repo}/contents/{path}', {
        //     owner: 'nf-core',
        //     repo: 'modules',
        //     path: `modules/nf-core/${module.name}/meta.yml`,
        // }).then((res) => res.data);
        console.log(parseDocument(meta));
        // ignore modules without meta.yml
        // if (meta === '404: Not Found') {
        //     return;
        // }
        // meta = yaml.load(meta);
        return meta;
    })
);


console.log(meta);
const title = 'nf-core/modules';
const description = `We currently have ${modules.length} modules available.`;
---

<ListingLayout
    title={title}
    description={description}
    input={meta}
    filter={[
        { name: 'Released', count: 0 },
        { name: 'Under development', count: 0 },
        { name: 'Archived', count: 0 },
    ]}
    sortBy={['Last release', 'Alphabetical', 'Stars']}
    displayStyle={[
        { name: 'grid', icon: 'fa-regular fa-grid-2' },
        { name: 'table', icon: 'fa-regular fa-bars' },
    ]}
/>

<style></style>
